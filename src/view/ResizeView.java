/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.awt.Point;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JSpinner;

/**
 *
 * @author Tommy
 */
public class ResizeView extends javax.swing.JDialog implements Observer {
    private MainView mainview;
    private Controller control;
    private boolean bind = true;
    private boolean haschange = false;
    
    /**
     * Creates new form ResizeView
     */
    public ResizeView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setLocation(new Point((int)(parent.getLocation().getX()+parent.getWidth()-this.getWidth()),(int)(parent.getLocation().getY())));
        this.setVisible(false);
        mainview = (MainView)parent;
        control = mainview.getController();
        control.addObserver(this);
        SPresizeWidth.addChangeListener(control);
        SPresizeHeight.addChangeListener(control);
        BresizeBind.addActionListener(control);
        BresizeResize.addActionListener(control);
        BresizeReset.addActionListener(control);
        BresizeBind.setIcon(new ImageIcon("src/images/bind.png"));
    }
    
    public JSpinner getSPresizeWidth() {
        return SPresizeWidth;
    }
    
    public JSpinner getSPresizeHeight() {
        return SPresizeHeight;
    }
    
    public JButton getBresizeBind() {
        return BresizeBind;
    }
    
    public JButton getBresizeReset() {
        return BresizeReset;
    }
    
    public JButton getBresizeResize() {
        return BresizeResize;
    }
    
    public boolean getBind() {
        return bind;
    }
    
    public void setBind(boolean b) {
        bind = b;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SPresizeWidth = new javax.swing.JSpinner();
        SPresizeHeight = new javax.swing.JSpinner();
        BresizeBind = new javax.swing.JButton();
        BresizeResize = new javax.swing.JButton();
        BresizeReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("width (px)");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("height (px)");

        SPresizeWidth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SPresizeWidth.setModel(new javax.swing.SpinnerNumberModel(640, 1, 2000, 1));

        SPresizeHeight.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SPresizeHeight.setModel(new javax.swing.SpinnerNumberModel(420, 1, 2000, 1));

        BresizeResize.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        BresizeResize.setText("Resize");

        BresizeReset.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        BresizeReset.setText("Reset");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SPresizeWidth)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SPresizeHeight)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(BresizeBind, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BresizeResize, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BresizeReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SPresizeWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SPresizeHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BresizeBind, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BresizeResize)
                    .addComponent(BresizeReset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResizeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResizeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResizeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResizeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ResizeView dialog = new ResizeView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BresizeBind;
    private javax.swing.JButton BresizeReset;
    private javax.swing.JButton BresizeResize;
    private javax.swing.JSpinner SPresizeHeight;
    private javax.swing.JSpinner SPresizeWidth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable abs, Object o) {
        if (o == BresizeBind) {
            if (bind) {
                bind = false;
                BresizeBind.setIcon(new ImageIcon("src/images/unbind.png"));
            }
            else {
                bind = true;
                BresizeBind.setIcon(new ImageIcon("src/images/bind.png"));
            }
        }
        else if (o == SPresizeWidth) {
            if (bind) {
                if (mainview.getProjects().get(mainview.getTabs().getSelectedIndex()).getResizeProj()) {
                    if (!haschange) {
                        ImagePanel img = mainview.getProjects().get(mainview.getTabs().getSelectedIndex());
                        haschange = true;
                        SPresizeHeight.setValue((int)((float)((int)SPresizeWidth.getValue())*img.getImgH()/img.getImgW()));
                        haschange = false;
                    }
                }
                else if (!haschange) {
                    ImagePanel img = mainview.getProjects().get(mainview.getTabs().getSelectedIndex());
                    float w = img.getLayers().get(img.getIndexSelect()).getImage().getWidth();
                    float h = img.getLayers().get(img.getIndexSelect()).getImage().getHeight();
                    haschange = true;
                    SPresizeHeight.setValue((int)((float)((int)SPresizeWidth.getValue())*h/w));
                    haschange = false;
                }
            }
        }
        else if (o == SPresizeHeight) {
            if (bind) {
                if (mainview.getProjects().get(mainview.getTabs().getSelectedIndex()).getResizeProj()) {
                    if (!haschange) {
                        ImagePanel img = mainview.getProjects().get(mainview.getTabs().getSelectedIndex());
                        haschange = true;
                        SPresizeHeight.setValue((int)((float)((int)SPresizeWidth.getValue())*img.getImgW()/img.getImgH()));
                        haschange = false;
                    }
                }
                else if (!haschange) {
                    ImagePanel img = mainview.getProjects().get(mainview.getTabs().getSelectedIndex());
                    float w = img.getLayers().get(img.getIndexSelect()).getImage().getWidth();
                    float h = img.getLayers().get(img.getIndexSelect()).getImage().getHeight();
                    haschange = true;
                    SPresizeWidth.setValue((int)((float)((int)SPresizeHeight.getValue())*w/h));
                    haschange = false;
                }
            }
        }
    }
}
